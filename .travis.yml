env:
    global:
        - REPO_DIR=scipy
        # Also see DAILY_COMMIT below
        - BUILD_COMMIT=master
        - PLAT=x86_64
        - NP_BUILD_DEP="numpy==1.16.5"
        - CYTHON_BUILD_DEP="Cython==0.29.18"
        - PYBIND11_BUILD_DEP="pybind11==2.4.3"
        - NP_TEST_DEP="numpy==1.16.5"
        - UNICODE_WIDTH=32
        - MANYLINUX_URL="https://5cf40426d9f06eb7461d-6fe47d9331aba7cd62fc36c7196769e4.ssl.cf2.rackcdn.com"
        - WHEELHOUSE_UPLOADER_USERNAME=travis-worker
        # Following generated with
        # travis encrypt -r MacPython/scipy-wheels WHEELHOUSE_UPLOADER_SECRET=<the api key>
        - secure:
            "fne+dO/N+Zv8pusPVO6S58p7lFWLDIwjXwf/IgBPxGSdDFEQVY8xl0+nGPNNzYZfmX/inBrb/3+8el9sggC+X7KG6mGmCtcpwems2sWn6XY5OQ+kWl8SEdDs2SiAsrieqbC3d1cmMoHyddX/YdGWVSdIji70nRER0j9wjNwYNlE="
        # Commit when running from master branch
        - DAILY_COMMIT=master

language: python
dist: bionic
services: docker
os: linux

jobs:
  exclude:
      # Exclude the default Python 3.5 build
      - python: 3.5
  include:
    - stage: Build and test wheel
      name: ARM64-Linux-Py37
      os: linux
      arch: arm64-graviton2
      dist: focal
      virt: vm
      group: edge
      env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=aarch64
        - NP_BUILD_DEP=numpy==1.19.1
        - CYTHON_BUILD_DEP="Cython"
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
      script:
        - echo "This stage will just build AArch64 wheel"
      workspaces:
        create:
          name: ws1
          paths:
            - wheelhouse
      after_success:
        - echo "This stage will not upload aarch64 wheel"
    - os: linux
      name: ARM64-Linux-Py38
      arch: arm64-graviton2
      dist: focal
      virt: vm
      group: edge
      env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=aarch64
        - NP_BUILD_DEP=numpy==1.19.1
        - CYTHON_BUILD_DEP="Cython"
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
      script:
        - echo "This stage will just build AArch64 wheel"
      workspaces:
        create:
          name: ws3
          paths:
            - wheelhouse
      after_success:
        - echo "This stage will not upload aarch64 wheel"
    - os: linux
      name: ARM64-Linux-Py39
      arch: arm64-graviton2
      dist: focal
      virt: vm
      group: edge
      env:
        - MB_PYTHON_VERSION=3.9
        - PLAT=aarch64
        - NP_BUILD_DEP=numpy==1.19.1
        - CYTHON_BUILD_DEP="Cython"
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
      script:
        - echo "This stage will just build AArch64 wheel"
      workspaces:
        create:
          name: ws4
          paths:
            - wheelhouse
      after_success:
        - echo "This stage will not upload aarch64 wheel"
    - os: linux
      name: amd64-Linux-Py39
      env:
        - MB_PYTHON_VERSION=3.9
        - NP_BUILD_DEP=numpy==1.19.1
        - NP_TEST_DEP=numpy==1.19.1
    - os: linux
      name: 32bit-amd64-Linux-Py39
      env:
        - MB_PYTHON_VERSION=3.9
        - PLAT=i686
        - NP_BUILD_DEP=numpy==1.19.3
        - NP_TEST_DEP=numpy==1.19.3
    - os: linux
      name: amd64-Linux-Py37
      env:
        - MB_PYTHON_VERSION=3.7
        - NP_BUILD_DEP=numpy==1.16.5
        - NP_TEST_DEP=numpy==1.16.5
        - CYTHON_BUILD_DEP="Cython"
    - os: linux
      name: amd64-Linux-Py38
      env:
        - MB_PYTHON_VERSION=3.8
        - NP_BUILD_DEP=numpy==1.17.3
        - NP_TEST_DEP=numpy==1.17.3
        - CYTHON_BUILD_DEP="Cython"
    - os: linux
      name: 32bit-amd64-Linux-Py38
      env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=i686
        - NP_BUILD_DEP=numpy==1.17.3
        - NP_TEST_DEP=numpy==1.17.3
        - CYTHON_BUILD_DEP="Cython"
    - os: linux
      name: 32bit-amd64-Linux-Py37
      env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=i686
        - NP_BUILD_DEP=numpy==1.16.5
        - NP_TEST_DEP=numpy==1.16.5
        - CYTHON_BUILD_DEP="Cython"
    - os: osx
      name: osx-Py37
      language: generic
      env:
        - MB_PYTHON_VERSION=3.7
        - NP_BUILD_DEP=numpy==1.16.5
        - NP_TEST_DEP=numpy==1.16.5
        - CYTHON_BUILD_DEP="Cython"
    - os: osx
      name: osx-Py38
      language: generic
      osx_image: xcode10.1
      env:
        - MB_PYTHON_VERSION=3.8
        - NP_BUILD_DEP=numpy==1.17.3
        - NP_TEST_DEP=numpy==1.17.3
        - CYTHON_BUILD_DEP="Cython"
        - MB_PYTHON_OSX_VER=10.9
    - os: osx
      name: osx-Py39
      language: generic
      osx_image: xcode10.1
      env:
        - MB_PYTHON_VERSION=3.9
        - NP_BUILD_DEP=numpy==1.19.1
        - NP_TEST_DEP=numpy==1.19.1
        - CYTHON_BUILD_DEP="Cython"
        - MB_PYTHON_OSX_VER=10.9

    - stage: Test wheel
      name: ARM64-Linux-Py37
      arch: arm64-graviton2
      dist: focal
      virt: vm
      group: edge
      env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=aarch64
        - NP_TEST_DEP=numpy==1.19.1
        - CYTHON_BUILD_DEP="Cython"
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
      workspaces:
        use: ws1
      install:
        - echo "This stage will test and upload the AArch64 wheel"
    - arch: arm64-graviton2
      name: ARM64-Linux-Py39
      dist: focal
      virt: vm
      group: edge
      env:
        - MB_PYTHON_VERSION=3.9
        - PLAT=aarch64
        - NP_TEST_DEP=numpy==1.19.1
        - CYTHON_BUILD_DEP="Cython"
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
      workspaces:
        use: ws4
      install:
        - echo "This stage will test and upload the AArch64 wheel"
    - arch: arm64-graviton2
      name: ARM64-Linux-Py38
      dist: focal
      virt: vm
      group: edge
      env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=aarch64
        - NP_TEST_DEP=numpy==1.19.1
        - CYTHON_BUILD_DEP="Cython"
        - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
      workspaces:
        use: ws3
      install:
        - echo "This stage will test and upload the AArch64 wheel"

before_install:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then
          CONTAINER="pre-release";
          BUILD_COMMIT=${DAILY_COMMIT:-$BUILD_COMMIT};
      else
          CONTAINER=wheels;
          UPLOAD_ARGS="--no-update-index";
      fi
    - BUILD_DEPENDS="$NP_BUILD_DEP $CYTHON_BUILD_DEP $PYBIND11_BUILD_DEP"
    - TEST_DEPENDS="$NP_TEST_DEP pytest pytest-xdist pytest-faulthandler pytest-env"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - ./patch_code.sh $REPO_DIR
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # trigger an upload to the shared ecosystem
    # infrastructure at: https://anaconda.org/scipy-wheels-nightly
    # for cron jobs only (restricted to master branch once
    # per week)
    # SCIPY_WHEELS_NIGHTLY is a secret token
    # used in Travis CI config, originally
    # generated at anaconda.org for scipy-wheels-nightly
    - if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then
          source extra_functions.sh;
          for f in wheelhouse/*.whl; do rename_wheel $f; done;
          ANACONDA_ORG="scipy-wheels-nightly";
          pip install git+https://github.com/Anaconda-Server/anaconda-client;
          anaconda -t ${SCIPY_WHEELS_NIGHTLY} upload --force -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
      fi
    # for merges (push events) we use the staging area instead;
    # SCIPY_STAGING_UPLOAD_TOKEN is a secret token used in Travis
    # CI config, originally generated at anaconda.org for
    # multibuild-wheels-staging
    - if [ "$TRAVIS_EVENT_TYPE" == "push" ]; then
          ANACONDA_ORG="multibuild-wheels-staging";
          pip install git+https://github.com/Anaconda-Server/anaconda-client;
          anaconda -t ${SCIPY_STAGING_UPLOAD_TOKEN} upload --force -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
      fi
